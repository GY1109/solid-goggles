# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bwgtog1P84nFHZ9_ZXhH5pcjVYZg0_Nl
"""

# 上传数据集
from google.colab import files

uploaded = files.upload()

# 将上传的文件保存在虚拟机上
with open("breast_cancer.csv", 'wb') as f:
    f.write(uploaded[list(uploaded.keys())[0]])

# 导入必要的库
import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
import keras
from keras.models import Sequential
from keras.layers import Dense
from sklearn.metrics import confusion_matrix

# 导入数据集
dataset = pd.read_csv('breast_cancer.csv')

# 分割因变量和自变量
X = dataset.iloc[:, 2:32].values
y = dataset.iloc[:, 1].values

# 编码因变量
labelencoder = LabelEncoder()
y = labelencoder.fit_transform(y)

# 分割数据集
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 初始化神经网络
classifier = Sequential()

# 添加输入层和第一个隐藏层
classifier.add(Dense(units=16, kernel_initializer='uniform', activation='relu', input_dim=30))

# 添加第二个隐藏层
classifier.add(Dense(units=16, kernel_initializer='uniform', activation='relu'))

# 添加输出层
classifier.add(Dense(units=1, kernel_initializer='uniform', activation='sigmoid'))

# 编译神经网络
classifier.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# 训练神经网络
classifier.fit(X_train, y_train, batch_size=10, epochs=100)

# 进行预测
y_pred = classifier.predict(X_test)
y_pred = (y_pred > 0.5)

# 创建混淆矩阵
cm = confusion_matrix(y_test, y_pred)

# 输出混淆矩阵
print(cm)